name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Replace with your actual GHCR path
  DOCKER_REGISTRY: ghcr.io/supreme070
  KUBECONFIG_FILE: ${{ secrets.KUBECONFIG }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install Backend Dependencies
        working-directory: ./backend
        run: npm ci
        
      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm ci
        
      - name: Run Backend Tests (if available)
        working-directory: ./backend
        run: npm test || echo "No tests available"
        
      - name: Run Frontend Tests (if available)
        working-directory: ./frontend
        run: npm test || echo "No tests available"

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: supreme070
          # Use your personal access token stored as a repo secret (GHCR_PAT)
          password: ${{ secrets.GHCR_PAT }}
          
      - name: Build and Push Backend Image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/backend:latest,${{ env.DOCKER_REGISTRY }}/backend:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.DOCKER_REGISTRY }}/backend:buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_REGISTRY }}/backend:buildcache,mode=max
          
      - name: Build and Push Frontend Image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/frontend:latest,${{ env.DOCKER_REGISTRY }}/frontend:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.DOCKER_REGISTRY }}/frontend:buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_REGISTRY }}/frontend:buildcache,mode=max

  deploy:
    needs: build-and-push
    # Use your self-hosted runner's labels so it runs on your Mac
    runs-on: [self-hosted, macos]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      
      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        
      - name: Setup kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config
          
      - name: Update Kubernetes Manifests
        run: |
          # Replace placeholders with your actual DOCKER_REGISTRY
          find kubernetes -type f -name "*.yaml" -exec sed -i "s|\${DOCKER_REGISTRY}|${{ env.DOCKER_REGISTRY }}|g" {} \;
          
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f kubernetes/backend/configmap.yaml
          kubectl apply -f kubernetes/backend/secret.yaml
          kubectl apply -f kubernetes/backend/deployment.yaml
          kubectl apply -f kubernetes/backend/service.yaml
          kubectl apply -f kubernetes/frontend/configmap.yaml
          kubectl apply -f kubernetes/frontend/deployment.yaml
          kubectl apply -f kubernetes/frontend/service.yaml
          kubectl apply -f kubernetes/frontend/ingress.yaml
          
      - name: Verify Deployment
        run: |
          kubectl rollout status deployment/backend
          kubectl rollout status deployment/frontend

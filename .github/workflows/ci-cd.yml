name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Replace with your actual GHCR path (e.g., ghcr.io/supreme070)
  DOCKER_REGISTRY: ghcr.io/supreme070
  KUBECONFIG_FILE: ${{ secrets.KUBECONFIG }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install Backend Dependencies
        working-directory: ./backend
        run: npm ci
        
      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm ci
        
      - name: Run Backend Tests (if available)
        working-directory: ./backend
        run: npm test || echo "No tests available"
        
      - name: Run Frontend Tests (if available)
        working-directory: ./frontend
        run: npm test || echo "No tests available"

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      # 1) Ensure QEMU is set up for cross-arch builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # 2) Set up Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3) Build & Push Backend (multi-arch)
      - name: Build and Push Backend Image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/backend:latest,${{ env.DOCKER_REGISTRY }}/backend:${{ github.sha }}

      # 4) Build & Push Frontend (multi-arch)
      - name: Build and Push Frontend Image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/frontend:latest,${{ env.DOCKER_REGISTRY }}/frontend:${{ github.sha }}



  deploy:
    needs: build-and-push
    # Use your self-hosted runner's labels so it runs on your Mac
    runs-on: [self-hosted, macos]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      
      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        
      - name: Setup kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config
          # Force Docker Desktop context (optional if you already default to it)
          kubectl config use-context docker-desktop
          
      - name: Update Kubernetes Manifests
        run: |
          # We'll look for literal ${DOCKER_REGISTRY} in the YAML files
          # and replace it with ghcr.io/supreme070
          find kubernetes -type f -name "*.yaml" -exec sed -i '' "s|\${DOCKER_REGISTRY}|ghcr.io/supreme070|g" {} \;
          
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f kubernetes/backend/configmap.yaml
          kubectl apply -f kubernetes/backend/secret.yaml
          kubectl apply -f kubernetes/backend/deployment.yaml
          kubectl apply -f kubernetes/backend/service.yaml
          kubectl apply -f kubernetes/frontend/configmap.yaml
          kubectl apply -f kubernetes/frontend/deployment.yaml
          kubectl apply -f kubernetes/frontend/service.yaml
          kubectl apply -f kubernetes/frontend/ingress.yaml
          
      - name: Verify Deployment
        run: |
          kubectl rollout status deployment/backend
          kubectl rollout status deployment/frontend
